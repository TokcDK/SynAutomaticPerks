using Mutagen.Bethesda;
using Mutagen.Bethesda.Plugins;
using Mutagen.Bethesda.Plugins.Records;
using Mutagen.Bethesda.Skyrim;
using Mutagen.Bethesda.Synthesis;
using SynAutomaticPerks.Extensions;
using SynAutomaticPerks.Settings;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using SynAutomaticPerks.Extensions;
using SynAutomaticPerks.Utils;

namespace SynAutomaticPerks
{
    public class Program
    {
        internal static Lazy<PatcherSettings> Settings = null!;
        public static async Task<int> Main(string[] args)
        {
            return await SynthesisPipeline.Instance
                .AddPatch<ISkyrimMod, ISkyrimModGetter>(RunPatch)
                .SetAutogeneratedSettings("PatcherSettings", "settings.json", out Settings)
                .SetTypicalOpen(GameRelease.SkyrimSE, "SynAutomaticPerks.esp")
                .Run(args);
        }

        public class ConditionData
        {
            public float Value;
            public Skill ActorSkill;
        }
        public class PerkInfo
        {
            public List<ConditionData> Conditions = new();
        }

        public static void RunPatch(IPatcherState<ISkyrimMod, ISkyrimModGetter> state)
        {
            AsisDataReader.SearchAndTryReadASISIni(state);

            AsisDataReader.SetAsisAutoSpellsIniValuesToSettings();

            state.AddPerksToNpc();
        }
    }
}
